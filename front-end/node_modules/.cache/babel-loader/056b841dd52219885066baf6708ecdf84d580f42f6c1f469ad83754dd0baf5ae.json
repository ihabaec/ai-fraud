{"ast":null,"code":"var _jsxFileName = \"/home/ihab/Real-Time-Fraud-Detection-System/FraudDetApp-frontend/src/components/RealTimeChart_1.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Chart } from 'react-chartjs-2';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend, zoomPlugin, annotationPlugin);\nconst RealTimeChart = ({\n  predictions,\n  transactions\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [insights, setInsights] = useState([]);\n  useEffect(() => {\n    if (transactions.length === 0 || predictions.length === 0) return;\n    const labels = transactions.map(t => new Date(t.Time * 1000).toLocaleTimeString());\n    const amounts = transactions.map(t => t.Amount);\n    const fraudStatus = transactions.map(t => t.Class === 1);\n\n    // Identify anomalies\n    const anomalies = identifyAnomalies(amounts);\n\n    // Calculate insights\n    const newInsights = calculateInsights(transactions, predictions, anomalies);\n    setInsights(newInsights);\n    setChartData({\n      labels,\n      datasets: [{\n        type: 'line',\n        label: 'Logistic Regression',\n        data: predictions.map(p => p.logistic),\n        borderColor: 'rgb(255, 99, 132)',\n        yAxisID: 'y'\n      }, {\n        type: 'line',\n        label: 'Random Forest',\n        data: predictions.map(p => p.random_forest),\n        borderColor: 'rgb(54, 162, 235)',\n        yAxisID: 'y'\n      }, {\n        type: 'line',\n        label: 'XGBoost',\n        data: predictions.map(p => p.xgboost),\n        borderColor: 'rgb(75, 192, 192)',\n        yAxisID: 'y'\n      }, {\n        type: 'bar',\n        label: 'Transaction Amount',\n        data: amounts,\n        backgroundColor: amounts.map((_, i) => fraudStatus[i] ? 'rgba(255, 99, 132, 0.5)' : anomalies[i] ? 'rgba(255, 206, 86, 0.5)' : 'rgba(75, 192, 192, 0.5)'),\n        yAxisID: 'y1'\n      }]\n    });\n  }, [predictions, transactions]);\n  const options = {\n    responsive: true,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    scales: {\n      y: {\n        type: 'linear',\n        display: true,\n        position: 'left',\n        title: {\n          display: true,\n          text: 'Fraud Probability'\n        },\n        min: 0,\n        max: 1\n      },\n      y1: {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        title: {\n          display: true,\n          text: 'Transaction Amount'\n        },\n        grid: {\n          drawOnChartArea: false\n        }\n      }\n    },\n    plugins: {\n      zoom: {\n        zoom: {\n          wheel: {\n            enabled: true\n          },\n          pinch: {\n            enabled: true\n          },\n          mode: 'xy'\n        },\n        pan: {\n          enabled: true,\n          mode: 'xy'\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: context => {\n            var _transactions$index;\n            const datasetLabel = context.dataset.label;\n            const value = context.parsed.y;\n            const index = context.dataIndex;\n            const fraudStatus = ((_transactions$index = transactions[index]) === null || _transactions$index === void 0 ? void 0 : _transactions$index.Class) === 1 ? 'Fraudulent' : 'Legitimate';\n            const isAnomaly = identifyAnomalies(transactions.map(t => t.Amount))[index];\n            return `${datasetLabel}: ${value.toFixed(2)} (${fraudStatus}${isAnomaly ? ', Anomaly' : ''})`;\n          }\n        }\n      }\n    }\n  };\n  const identifyAnomalies = amounts => {\n    const mean = amounts.reduce((sum, amount) => sum + amount, 0) / amounts.length;\n    const stdDev = Math.sqrt(amounts.reduce((sum, amount) => sum + Math.pow(amount - mean, 2), 0) / amounts.length);\n    const threshold = mean + 3 * stdDev;\n    return amounts.map(amount => amount > threshold);\n  };\n  const calculateInsights = (transactions, predictions, anomalies) => {\n    const fraudCount = transactions.filter(t => t.Class === 1).length;\n    const fraudRate = fraudCount / transactions.length * 100;\n    const averageAmount = transactions.reduce((sum, t) => sum + t.Amount, 0) / transactions.length;\n    const maxAmount = Math.max(...transactions.map(t => t.Amount));\n    const anomalyCount = anomalies.filter(a => a).length;\n    const modelAccuracies = {\n      logistic: predictions.reduce((sum, p) => sum + p.logistic, 0) / predictions.length,\n      random_forest: predictions.reduce((sum, p) => sum + p.random_forest, 0) / predictions.length,\n      xgboost: predictions.reduce((sum, p) => sum + p.xgboost, 0) / predictions.length\n    };\n    return [`Fraud Rate: ${fraudRate.toFixed(2)}%`, `Average Transaction Amount: $${averageAmount.toFixed(2)}`, `Highest Transaction Amount: $${maxAmount.toFixed(2)}`, `Anomalies Detected: ${anomalyCount}`, `Model Accuracies: Logistic (${(modelAccuracies.logistic * 100).toFixed(2)}%), Random Forest (${(modelAccuracies.random_forest * 100).toFixed(2)}%), XGBoost (${(modelAccuracies.xgboost * 100).toFixed(2)}%)`];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-md p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold mb-4\",\n      children: \"Real-Time Fraud Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), chartData && /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"bar\",\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-md font-semibold mb-2\",\n        children: \"Insights:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc pl-5\",\n        children: insights.map((insight, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"text-sm text-gray-600\",\n          children: insight\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex justify-between text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 bg-rgba(75, 192, 192, 0.5) mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Normal Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 bg-rgba(255, 206, 86, 0.5) mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Anomaly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 bg-rgba(255, 99, 132, 0.5) mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Fraudulent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(RealTimeChart, \"crjF0HbweuDKjEwd7KN2/w8yfHs=\");\n_c = RealTimeChart;\nexport default RealTimeChart;\nvar _c;\n$RefreshReg$(_c, \"RealTimeChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","zoomPlugin","annotationPlugin","jsxDEV","_jsxDEV","register","RealTimeChart","predictions","transactions","_s","chartData","setChartData","insights","setInsights","length","labels","map","t","Date","Time","toLocaleTimeString","amounts","Amount","fraudStatus","Class","anomalies","identifyAnomalies","newInsights","calculateInsights","datasets","type","label","data","p","logistic","borderColor","yAxisID","random_forest","xgboost","backgroundColor","_","i","options","responsive","interaction","mode","intersect","scales","y","display","position","title","text","min","max","y1","grid","drawOnChartArea","plugins","zoom","wheel","enabled","pinch","pan","tooltip","callbacks","context","_transactions$index","datasetLabel","dataset","value","parsed","index","dataIndex","isAnomaly","toFixed","mean","reduce","sum","amount","stdDev","Math","sqrt","pow","threshold","fraudCount","filter","fraudRate","averageAmount","maxAmount","anomalyCount","a","modelAccuracies","className","children","fileName","_jsxFileName","lineNumber","columnNumber","insight","_c","$RefreshReg$"],"sources":["/home/ihab/Real-Time-Fraud-Detection-System/FraudDetApp-frontend/src/components/RealTimeChart_1.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Chart } from 'react-chartjs-2';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport { Transaction, Prediction } from '../types/types';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  zoomPlugin,\n  annotationPlugin\n);\n\ninterface RealTimeChartProps {\n  predictions: Prediction[];\n  transactions: Transaction[];\n}\n\nconst RealTimeChart: React.FC<RealTimeChartProps> = ({ predictions, transactions }) => {\n  const [chartData, setChartData] = useState<any>(null);\n  const [insights, setInsights] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (transactions.length === 0 || predictions.length === 0) return;\n\n    const labels = transactions.map(t => new Date(t.Time * 1000).toLocaleTimeString());\n    const amounts = transactions.map(t => t.Amount);\n    const fraudStatus = transactions.map(t => t.Class === 1);\n\n    // Identify anomalies\n    const anomalies = identifyAnomalies(amounts);\n\n    // Calculate insights\n    const newInsights = calculateInsights(transactions, predictions, anomalies);\n    setInsights(newInsights);\n\n    setChartData({\n      labels,\n      datasets: [\n        {\n          type: 'line' as const,\n          label: 'Logistic Regression',\n          data: predictions.map(p => p.logistic),\n          borderColor: 'rgb(255, 99, 132)',\n          yAxisID: 'y',\n        },\n        {\n          type: 'line' as const,\n          label: 'Random Forest',\n          data: predictions.map(p => p.random_forest),\n          borderColor: 'rgb(54, 162, 235)',\n          yAxisID: 'y',\n        },\n        {\n          type: 'line' as const,\n          label: 'XGBoost',\n          data: predictions.map(p => p.xgboost),\n          borderColor: 'rgb(75, 192, 192)',\n          yAxisID: 'y',\n        },\n        {\n          type: 'bar' as const,\n          label: 'Transaction Amount',\n          data: amounts,\n          backgroundColor: amounts.map((_, i) => \n            fraudStatus[i] \n              ? 'rgba(255, 99, 132, 0.5)' \n              : anomalies[i] \n                ? 'rgba(255, 206, 86, 0.5)'\n                : 'rgba(75, 192, 192, 0.5)'\n          ),\n          yAxisID: 'y1',\n        },\n      ],\n    });\n  }, [predictions, transactions]);\n\n  const options = {\n    responsive: true,\n    interaction: {\n      mode: 'index' as const,\n      intersect: false,\n    },\n    scales: {\n      y: {\n        type: 'linear' as const,\n        display: true,\n        position: 'left' as const,\n        title: {\n          display: true,\n          text: 'Fraud Probability',\n        },\n        min: 0,\n        max: 1,\n      },\n      y1: {\n        type: 'linear' as const,\n        display: true,\n        position: 'right' as const,\n        title: {\n          display: true,\n          text: 'Transaction Amount',\n        },\n        grid: {\n          drawOnChartArea: false,\n        },\n      },\n    },\n    plugins: {\n      zoom: {\n        zoom: {\n          wheel: {\n            enabled: true,\n          },\n          pinch: {\n            enabled: true,\n          },\n          mode: 'xy' as const,\n        },\n        pan: {\n          enabled: true,\n          mode: 'xy' as const,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: (context: any) => {\n            const datasetLabel = context.dataset.label;\n            const value = context.parsed.y;\n            const index = context.dataIndex;\n            const fraudStatus = transactions[index]?.Class === 1 ? 'Fraudulent' : 'Legitimate';\n            const isAnomaly = identifyAnomalies(transactions.map(t => t.Amount))[index];\n            return `${datasetLabel}: ${value.toFixed(2)} (${fraudStatus}${isAnomaly ? ', Anomaly' : ''})`;\n          },\n        },\n      },\n    },\n  };\n\n  const identifyAnomalies = (amounts: number[]) => {\n    const mean = amounts.reduce((sum, amount) => sum + amount, 0) / amounts.length;\n    const stdDev = Math.sqrt(amounts.reduce((sum, amount) => sum + Math.pow(amount - mean, 2), 0) / amounts.length);\n    const threshold = mean + 3 * stdDev;\n\n    return amounts.map(amount => amount > threshold);\n  };\n\n  const calculateInsights = (transactions: Transaction[], predictions: Prediction[], anomalies: boolean[]) => {\n    const fraudCount = transactions.filter(t => t.Class === 1).length;\n    const fraudRate = (fraudCount / transactions.length) * 100;\n    const averageAmount = transactions.reduce((sum, t) => sum + t.Amount, 0) / transactions.length;\n    const maxAmount = Math.max(...transactions.map(t => t.Amount));\n    const anomalyCount = anomalies.filter(a => a).length;\n\n    const modelAccuracies = {\n      logistic: predictions.reduce((sum, p) => sum + p.logistic, 0) / predictions.length,\n      random_forest: predictions.reduce((sum, p) => sum + p.random_forest, 0) / predictions.length,\n      xgboost: predictions.reduce((sum, p) => sum + p.xgboost, 0) / predictions.length,\n    };\n\n    return [\n      `Fraud Rate: ${fraudRate.toFixed(2)}%`,\n      `Average Transaction Amount: $${averageAmount.toFixed(2)}`,\n      `Highest Transaction Amount: $${maxAmount.toFixed(2)}`,\n      `Anomalies Detected: ${anomalyCount}`,\n      `Model Accuracies: Logistic (${(modelAccuracies.logistic * 100).toFixed(2)}%), Random Forest (${(modelAccuracies.random_forest * 100).toFixed(2)}%), XGBoost (${(modelAccuracies.xgboost * 100).toFixed(2)}%)`,\n    ];\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-4\">\n      <h2 className=\"text-lg font-semibold mb-4\">Real-Time Fraud Detection</h2>\n      {chartData && <Chart type=\"bar\" data={chartData} options={options} />}\n      <div className=\"mt-4\">\n        <h3 className=\"text-md font-semibold mb-2\">Insights:</h3>\n        <ul className=\"list-disc pl-5\">\n          {insights.map((insight, index) => (\n            <li key={index} className=\"text-sm text-gray-600\">{insight}</li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"mt-4 flex justify-between text-sm\">\n        <div className=\"flex items-center\">\n          <div className=\"w-4 h-4 bg-rgba(75, 192, 192, 0.5) mr-2\"></div>\n          <span>Normal Transaction</span>\n        </div>\n        <div className=\"flex items-center\">\n          <div className=\"w-4 h-4 bg-rgba(255, 206, 86, 0.5) mr-2\"></div>\n          <span>Anomaly</span>\n        </div>\n        <div className=\"flex items-center\">\n          <div className=\"w-4 h-4 bg-rgba(255, 99, 132, 0.5) mr-2\"></div>\n          <span>Fraudulent</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RealTimeChart;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}